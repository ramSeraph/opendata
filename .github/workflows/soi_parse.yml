name: SOI Weekly Parse Run

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on: 
  schedule:
    - cron: 0 5 * * 6
  workflow_dispatch:


jobs:
  Check-For-Work:
    runs-on: ubuntu-22.04
    env:
      GH_TOKEN: ${{ github.token }}
    outputs: 
      work_item_count: ${{ steps.work.outputs.num_items }}  
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: astral-sh/setup-uv@v5
      - name: Check for work
        id: work
        run: |
          cd maps/SOI
          mkdir data
          util/get_work_for_compressor.sh data/to_.txt
          cat data/to_parse.txt
          num_items=$(wc -l data/to_parse.txt | tr -s " " | cut -d" " -f1)
          echo "num_items=$num_items"
          echo "num_items=$num_items" >> $GITHUB_OUTPUT

  Run-SOI-Parsing:
    needs: Check-For-Work
    if: needs.Check-For-Work.outputs.work_item_count != '0'
    timeout-minutes: 600
    runs-on: ubuntu-22.04
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Setup swap
        uses: pierotofy/set-swap-space@v1.0
        with:
          swap-size-gb: 12
      - uses: actions/checkout@v4.1.7

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: maps/SOI/parse.py.lock
          version: ">=0.5.29"

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install -y gdal-bin libgdal-dev

      - name: Restore parse tools from cache
        uses: ramSeraph/cache-always@v0.0.1
        with:
          path: maps/SOI/bin/
          key:  soi-parse-tools-v5
        id: tools-cache

      - name: Restore ancillary files from cache
        uses: ramSeraph/cache-always@v0.0.1
        with:
          path: |
            maps/SOI/data/index.geojson
            maps/SOI/data/raw/SOI_FONTS.zip
          key: 'SOI-parse-basefiles-v1'
        id: base-files-cache


      - name: Install tools
        run: |
          cd maps/SOI
          if [[ ! -f bin/mutool ]]; then
            sudo apt-get install -y llvm
            CXX=clang++ AR=llvm-ar util/build_mutool.sh
          fi

      - name: Get current date
        run: echo "date=$(date +'%d%b%Y')" >> $GITHUB_OUTPUT
        id: date

      - name: Restore parse run data from cache
        uses: ramSeraph/cache-always@v0.0.1
        with:
          path: |
            maps/SOI/data/raw/*.pdf
            maps/SOI/export/gtiffs/
          key:  soi-gcs-parse-v4-${{ steps.date.outputs.date }}-${{ github.run_number }}-${{ github.run_attempt }}
          restore-keys: |
            soi-gcs-parse-v4-${{ steps.date.outputs.date }}-${{ github.run_number }}-
            soi-gcs-parse-v4-${{ steps.date.outputs.date }}-


      - name: Parse SOI sheets
        run: |
          cd maps/SOI

          [[ -f data/raw/SOI_FONTS.zip ]] || wget -P data/raw/ https://github.com/ramSeraph/opendata/releases/download/soi-ancillary/SOI_FONTS.zip 
          [[ -f data/index.geojson ]] || wget -P data/ https://github.com/ramSeraph/opendata/releases/download/soi-ancillary/index.geojson

          util/get_work_for_parser.sh data/to_parse.txt
          util/download_sheets.sh data/to_parse.txt

          uv run check_duplicates.py data/to_parse.txt

          mkdir -p export/gtiffs/

          GDAL_VERSION=$(gdalinfo --version | cut -d"," -f1 | cut -d" " -f2)
          FROM_LIST=data/to_parse.txt uv run --with GDAL==${GDAL_VERSION} parse.py
          
          ls export/gtiffs/*.tif > to_upload.txt || touch to_upload.txt
          cat to_upload.txt | xargs -I {} gh release upload soi-tiffs {}

          rm -rf data/raw/* || true
          rm -rf export/gtiffs/* || true
        timeout-minutes: 600
 
      - name: Update lists
        run: |
          cd maps/SOI
          util/generate_lists.sh tiffs

  SOI-Parse-Failure-Notify:
    needs: 
      - Run-SOI-Parsing
      - Check-For-Work
    if: always() && ( needs.Check-For-Work.result == 'failure' || needs.Run-SOI-Parsing.result == 'failure' )
    uses: ./.github/workflows/common-pb-alert.yml
    secrets: inherit
    with:
      title: "SOI Parse Run Failed"
      which-run: "self"
