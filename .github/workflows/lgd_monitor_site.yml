name: LGD Daily Site Monitor

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on: 
  schedule:
    - cron: '15 3 * * *'
  push:
    branches:
      - 'main'
    paths:
      - 'lgd/scrape/site_map.json'
  workflow_dispatch:


env:
  ISSUE_TITLE: "LGD Site Structure Change"
  ISSUE_BODY_FILE: "issue_body.md"

jobs:
  Run-LGD-Monitor:
    timeout-minutes: 10
    runs-on: ubuntu-22.04
    outputs:
      changes: ${{ steps.monitor-changes.outputs.changes }}
    steps:
      - uses: actions/checkout@v4.1.7

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: lgd/uv.lock

      - name: Get current date
        run: echo "date=$(date +'%d%b%Y')" >> $GITHUB_OUTPUT
        id: date

      - name: Restore Cached changes
        uses: actions/cache/restore@v4
        with:
          path: lgd/data/raw
          key: LGD-Monitor-Changes-v1-${{ steps.date.outputs.date }}-${{ github.run_number }}-${{ github.run_attempt }}
          restore-keys: |
            LGD-Monitor-Changes-v1-${{ steps.date.outputs.date }}-${{ github.run_number }}-

      - name: Monitor site for changes
        id: monitor-changes
        run: |
          cd lgd

          uv run python -m scrape -m MONITOR -l INFO

          filename="data/raw/${{ steps.date.outputs.date }}/struct_changes.json" 
          if [[ -f $filename ]]; then
            cat $filename
            echo
            echo "changes=$filename" >> $GITHUB_OUTPUT
          else
            echo "changes=none" >> $GITHUB_OUTPUT
          fi
        timeout-minutes: 5

      - name: Save Cached changes
        uses: actions/cache/save@v4
        if: always()
        with:
          path: lgd/data/raw
          key: LGD-Monitor-Changes-v1-${{ steps.date.outputs.date }}-${{ github.run_number }}-${{ github.run_attempt }}


  LGD-Issue-Lister:
    runs-on: ubuntu-22.04
    needs:
      - Run-LGD-Monitor
    outputs:
      next-id: ${{ steps.get-next-id.outputs.next-id }}
      issue-number: ${{ steps.last-issue.outputs.issue-number }}
      has-found: ${{ steps.last-issue.outputs.has-found }}
      is-closed: ${{ steps.last-issue.outputs.is-closed }}
    steps:
      - name: Find the last open report issue
        id: last-issue
        uses: micalevisk/last-issue-action@v2
        with:
          state: all
          labels: |
            LGD
            site map tracker

      - name: Get Id of last issue
        id: get-next-id
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          last_issue_number="${{ steps.last-issue.outputs.issue-number }}"
          if [[ "$last_issue_number" != "" ]]; then
            title="$(gh api -H "Accept: application/vnd.github+json" /repos/${{ github.repository }}/issues/$last_issue_number | jq -r '.title')"
            echo "title = $title"
            next_id=$(echo "$title" | sed 's/^${{env.ISSUE_TITLE}} - //g')
            echo "prev id is $next_id"
            re='^[0-9]+$'
            if ! [[ $next_id =~ $re ]] ; then
              echo "error: Not a number" >&2; exit 1
            fi
            next_id=$(( next_id + 1 ))
          else
            next_id=0
          fi
          echo "next id is $next_id"
          echo "next-id=$next_id" >> $GITHUB_OUTPUT


  LGD-Issue-Closer:
    runs-on: ubuntu-22.04
    needs:
      - Run-LGD-Monitor
      - LGD-Issue-Lister
    if: needs.Run-LGD-Monitor.outputs.changes == 'none'
    steps:
      - name: Issue Closure Checks
        id: closure-checks
        run: |
          set -euo pipefail
          echo "close=false"
          if [[ "${{ needs.LGD-Issue-Lister.outputs.has-found }}" == "true" && "${{ needs.LGD-Issue-Lister.outputs.is-closed }}" == "false" ]]; then
            echo "need to close current issue"
            echo "close=true" >> $GITHUB_OUTPUT
            if [[ "${{ github.event_name }}" == "push" ]]; then
              echo "${{ toJSON(github.event) }}"
              compare="${{ github.event.compare }}"
              echo "reason=\"[User made Changes]($compare) or website changed\"" >> $GITHUB_OUTPUT
            else
              echo "reason=\"Changes in website\"" >> $GITHUB_OUTPUT
            fi
          fi
      - name: Close Issue
        if: steps.closure-checks.outputs.close == 'true'
        uses: peter-evans/close-issue@v3.0.1
        with:
          issue-number: ${{ needs.LGD-Issue-Lister.outputs.issue-number }}
          comment: Auto-closing issue - ${{ steps.closure-checks.outputs.reason }}
          token: ${{ secrets.GITHUB_TOKEN }}


  LGD-Issue-Creator:
    runs-on: ubuntu-22.04
    needs:
      - Run-LGD-Monitor
      - LGD-Issue-Lister
    outputs:
      create: ${{ steps.issue-body-creator.outputs.create }}
      issue-number: ${{ steps.issue-body-creator.outputs.issue-number }}
    if: needs.Run-LGD-Monitor.outputs.changes != 'none'
    steps:
      - name: Get current date
        run: echo "date=$(date +'%d%b%Y')" >> $GITHUB_OUTPUT
        id: date
      - name: Restore cached changes
        uses: actions/cache/restore@v4
        with:
          path: lgd/data/raw
          key: LGD-Monitor-Changes-v1-${{ steps.date.outputs.date }}-${{ github.run_number }}-${{ github.run_attempt }}
          restore-keys: |
            LGD-Monitor-Changes-v1-${{ steps.date.outputs.date }}-${{ github.run_number }}-

      - id: issue-body-creator
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          echo "\`\`\`yaml" > $ISSUE_BODY_FILE
          cat ${{ needs.Run-LGD-Monitor.outputs.changes }} | jq . >> $ISSUE_BODY_FILE
          echo >> $ISSUE_BODY_FILE
          echo "\`\`\`" >> $ISSUE_BODY_FILE
          rm ${{ needs.Run-LGD-Monitor.outputs.changes }} 

          cat $ISSUE_BODY_FILE

          issue_id="${{ needs.LGD-Issue-Lister.outputs.issue-number }}"
          
          if [[ "${{ needs.LGD-Issue-Lister.outputs.has-found }}" == "false" || "${{ needs.LGD-Issue-Lister.outputs.is-closed }}" == "true" ]]; then
            echo "need to create new issue"
            echo "issue-number=" >> $GITHUB_OUTPUT
            echo "create=true" >> $GITHUB_OUTPUT
          else
            issue_url="https://api.github.com/repos/${{ github.repository }}/issues/$issue_id"
            gh api -H "Accept: application/vnd.github+json" $issue_url | jq -r '.body' > existing_${ISSUE_BODY_FILE}
            sed -i '${/^$/d;}' existing_${ISSUE_BODY_FILE}
            cat existing_${ISSUE_BODY_FILE}
            echo "existing issue $issue_id found"
            echo "issue-number=$issue_id" >> $GITHUB_OUTPUT
            echo "create=false" >> $GITHUB_OUTPUT
            diff $ISSUE_BODY_FILE existing_$ISSUE_BODY_FILE || ( echo "issue needs to be updated" && echo "create=true" >> $GITHUB_OUTPUT )
          fi

      - id: create-issue
        if: steps.issue-body-creator.outputs.create == 'true'
        uses: peter-evans/create-issue-from-file@v5.0.0
        name: Create Issue Action
        with:
          title: ${{ env.ISSUE_TITLE }} - ${{ needs.LGD-Issue-Lister.outputs.next-id }}
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ steps.issue-body-creator.outputs.issue-number }}
          content-filepath: ${{ env.ISSUE_BODY_FILE }}
          assignees: ${{github.repository_owner}}
          labels: |
            LGD
            site map tracker

  LGD-Monitor-Notify-Issue:
    needs: 
      - Run-LGD-Monitor
      - LGD-Issue-Lister
      - LGD-Issue-Creator
    if: |
       needs.Run-LGD-Monitor.outputs.changes != 'none' &&
       needs.LGD-Issue-Creator.outputs.create == 'true'
    uses: ./.github/workflows/common-pb-alert.yml
    secrets: inherit
    with:
      title: "LGD Catalog Change"
      which-run: "ignore"
      url: "https://github.com/${{ github.repository }}/issues/${{ needs.LGD-Issue-Creator.outputs.issue-number }}"

  LGD-Monitor-Notify-Run-Failure:
    needs: 
      - Run-LGD-Monitor
      - LGD-Issue-Lister
      - LGD-Issue-Closer
      - LGD-Issue-Creator
      - LGD-Monitor-Notify-Issue
    if: |
      always() && 
      (
        needs.Run-LGD-Monitor.result == 'failure' ||
        needs.LGD-Issue-Lister.result == 'failure' ||
        needs.LGD-Issue-Creator.result == 'failure' ||
        needs.LGD-Monitor-Notify-Issue.result == 'failure'
      )
    uses: ./.github/workflows/common-pb-alert.yml
    secrets: inherit
    with:
      title: "LGD Site Monitor Run Failed"
      which-run: "self"

