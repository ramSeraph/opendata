name: SOI Weekly Unavailable Pull Run

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on: 
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:


jobs:
  Run-SOI-Extraction:
    timeout-minutes: 600
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4.1.7

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: maps/SOI/uv.lock
          version: ">=0.5.29"

      - name: Restore tesseract models from cache
        uses: ramSeraph/cache-always@v0.0.1
        with:
          path: 'maps/SOI/data/captcha/models/'
          key:  'SOI-tesseract-models-gcs-v2'
        id: models-cache

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install -y tesseract-ocr

      - name: Download tesseract models from github releases
        if: ${{ steps.models-cache.outputs.cache-hit != 'true' }}
        run: |
          cd maps/SOI
          mkdir -p data/captcha/models/
          util/download_captcha_models.sh data/captcha/models

      - name: Download users lists
        run: |
          cd maps/SOI
          echo "${{ secrets.SOI_USERS }}" | base64 -d > data/users.json

      - name: Get current date
        run: echo "date=$(date +'%d%b%Y')" >> $GITHUB_OUTPUT
        id: date

      - name: Restore prev workspace
        uses: ramSeraph/cache-always@v0.0.1
        with:
          path: |
            maps/SOI/data/raw/
            maps/SOI/data/index.geojson
            maps/SOI/data/cookies/
            maps/SOI/data/tried_users.txt
          key:  SOI-data-ua-raw-v3-${{ steps.date.outputs.date }}-${{ github.run_number }}-${{ github.run_attempt }}
          restore-keys: |
            SOI-data-ua-raw-v3-${{ steps.date.outputs.date }}-${{ github.run_number }}-
            SOI-data-ua-raw-v3-${{ steps.date.outputs.date }}-

      - name: Download index file
        run: |
          cd maps/SOI/data/
          [[ -f index.geojson ]] || wget https://github.com/ramSeraph/opendata/releases/download/soi-ancillary/index.geojson
              
      - name: Authenticate with GCP
        run: |
          gcloud auth activate-service-account --key-file=<(echo ${{ secrets.GCP_AUTH }} | base64 -d)

      - name: Bring up the proxy
        run: |
          ./infra/create.sh

      # scrape things
      - name: Download SOI data
        run: |
          cd maps/SOI
          wget https://github.com/ramSeraph/opendata/releases/download/soi-pdfs/list.txt
          cat list.txt | cut -d" " -f2 | xargs -I {} echo {}.pdf > data/files_done.txt
          PROXY_URL="http://$(cat ../../ip_address.txt):80" PB_TOKEN="${{ secrets.PB_TOKEN }}" uv run scrape.py -u -p -i -r 25
        timeout-minutes: 180

      - name: Bring down the proxy
        if: ${{ always() }}
        run: |
          if [[ -e info.sh ]]; then
            ./infra/destroy.sh 
          fi

      - name: Upload raw files to github releases
        run: |
          cd maps/SOI
          ls data/raw/*.pdf > downloaded.txt || touch downloaded.txt
          cat download.txt
          cat downloaded.txt | xargs -I {} gh release upload soi-pdfs {}
          rm -rf data/raw/* || true
          rm -rf data/cookies || true
          rm -rf data/tried_users.txt || true
          rm downloaded.txt

      - name: Update lists
        run: |
          cd maps/SOI
          ./generate_lists.sh pdfs

  SOI-Extraction-Failure-Notify:
    needs: [Run-SOI-Extraction]
    if: always() && needs.Run-SOI-Extraction.result == 'failure'
    uses: ./.github/workflows/common-pb-alert.yml
    secrets: inherit
    with:
      title: "SOI Extraction Run Failed"
      which-run: "self"
