name: LGD Daily Run

concurrency: 
  group: ${{ github.workflow }}
  cancel-in-progress: true

on:
  schedule:
    - cron: '15 6 * * *'
  workflow_dispatch:


jobs:
  Run-LGD-Extraction:
    timeout-minutes: 600
    runs-on: ubuntu-22.04
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Setup swap
        uses: pierotofy/set-swap-space@v1.0
        with:
          swap-size-gb: 10

      - uses: actions/checkout@v4.1.7

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: lgd/uv.lock

      - name: Restore tesseract models from cache
        uses: actions/cache/restore@v4.2.2
        with:
          path: 'lgd/data/captcha/models/' 
          key:  'lgd-tesseract-models-gcs-v2'
        id: models-cache

      - name: Download tesseract models from github releases
        if: ${{ steps.models-cache.outputs.cache-hit != 'true' }}
        run: |
          cd lgd/
          mkdir -p data/captcha/models/
          utils/download_captcha_models.sh data/captcha/models

      - name: Save tesseract models to cache
        if: ${{ steps.models-cache.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@v4
        with:
          path: 'lgd/data/captcha/models/' 
          key:  'lgd-tesseract-models-gcs-v2'

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install -y tesseract-ocr


      - name: Get current date
        run: echo "date=$(date +'%d%b%Y')" >> $GITHUB_OUTPUT
        id: date

      - name: Restore daily run data from cache
        uses: actions/cache/restore@v4
        with:
          path: |
            lgd/data/raw/
          key:  lgd-data-raw-v3-${{ steps.date.outputs.date }}-${{ github.run_number }}-${{ github.run_attempt }}
          restore-keys: |
            lgd-data-raw-v3-${{ steps.date.outputs.date }}-${{ github.run_number }}-
            lgd-data-raw-v3-${{ steps.date.outputs.date }}-

      - name: Download changes file from github
        run: |
          cd lgd/
          mkdir -p data/raw/changes
          cd data/raw/changes
          if [[ -e combined.csv ]]; then
            exit 0
          fi
          gh release download lgd-latest -p changes.csv.7z
          gh release download lgd-latest -p changes_dates_covered.txt -O dates_covered.txt
          7z x changes.csv.7z
          rm changes.csv.7z
          mv changes.csv combined.csv

      - name: Download LGD data
        id: download
        run: |
          cd lgd/

          uv run python -m scrape -m RUN -l INFO -R 300 --use-procs -p 10 --save-status status.json --captcha-model-dir data/captcha/models --captcha-retries 10

          error_count=$(cat status.json | jq -r '.error | length')

          [[ $error_count == 0 ]] && exit 0
          exit 1

        timeout-minutes: 300

      - name: Upload archive file to github
        if: always()
        id: upload
        run: |
          cd lgd/
          curr_date=${{ steps.date.outputs.date }}
          cat status.json | jq -r '.done[]' > done_comps.txt || touch done_comps.txt
          utils/push_to_release.sh $curr_date
          uvx --from gh_release_tools generate-lists lgd-latest '.7z'

      - name: Cleanup
        if: always() && steps.download.outcome == 'success' && steps.upload.outcome == 'success'
        run: |
          rm -rf lgd/data/raw/* || true

      - name: Save daily run data to cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: |
            lgd/data/raw/
          key:  lgd-data-raw-v3-${{ steps.date.outputs.date }}-${{ github.run_number }}-${{ github.run_attempt }}

  BuildDocs:
    needs: Run-LGD-Extraction
    uses: ./.github/workflows/docs.yml
    secrets: inherit


